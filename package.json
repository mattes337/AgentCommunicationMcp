{
  "name": "agent-communication-mcp",
  "version": "1.0.0",
  "description": "Multi-Agent Communication System using Model Context Protocol (MCP) with file-based storage",
  "main": "src/index.js",
  "bin": {
    "agent-mcp": "./bin/agent-mcp"
  },
  "scripts": {
    "start": "node src/mcp-server.js",
    "start:shared": "node src/mcp-server-shared.js",
    "start:proxy": "node src/mcp-proxy.js",
    "dev": "node --watch src/index.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:docker": "node scripts/test-cross-platform.js",
    "test:shared": "node examples/test-shared-server.js",
    "demo": "node examples/demo.js",
    "test:mcp": "node examples/mcp-test.js",
    "api": "node src/http-api.js",
    "test:server": "node examples/test-mcp-server.js",
    "docker:setup": "node scripts/cross-platform-runner.js docker-setup",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:run": "node scripts/cross-platform-runner.js docker-run",
    "docker:clean": "docker-compose down -v && docker system prune -f",
    "install:global": "bash scripts/install-global.sh"
  },
  "keywords": [
    "mcp",
    "multi-agent",
    "ai",
    "llm",
    "communication",
    "file-based",
    "autonomous"
  ],
  "author": "Agent Communication MCP Team",
  "license": "MIT",
  "dependencies": {
    "@modelcontextprotocol/sdk": "^0.5.0",
    "chokidar": "^3.5.3",
    "express": "^4.21.2",
    "uuid": "^9.0.1",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "jest": "^29.7.0"
  },
  "engines": {
    "node": ">=16.0.0"
  }
}
